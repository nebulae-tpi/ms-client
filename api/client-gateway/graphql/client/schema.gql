"Async CMD server acknowledge"
type CommandAck {
   "message accepted by the server"
   accepted: Boolean
}

type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type ClientData{
   "Client id"
   clientId: String
   "Client name"
   name: String
   "Client username"
   username: String
   "SatelliteID"
   satelliteId: String
}

type SatelliteLatLng{
   lat: Float
   lng: Float
}

"Satellite basic Info"
type ClientBasicSatelliteInfo {
   "Business ID"
   businessId: String! 
   "Client ID"
   _id: String!
   "Name"
   name: String
   "Phone"
   phone: String
   "email"
   email: String
   "city"
   city: String
   "Neighborhood"
   neighborhood: String
   "Addres"
   address: String
   "Zone"
   zone: String
   "Active State"
   active: Boolean
   "location"
   location: SatelliteLatLng
   "Tip type"
   tipType: String
   "Tip"
   tip: Int   
}

type Query {
   "Get profile data of the logged user"
   ClientProfile: ClientData @requireAuth
   ClientLinkedSatellite(satelliteId: String!): ClientBasicSatelliteInfo @requireAuth
}

type Mutation {
   ValidateNewClient: ClientData @requireAuth
   linkSatellite(satelliteId: String): CommandResponse @requireAuth
}
