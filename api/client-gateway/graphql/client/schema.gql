"Async CMD server acknowledge"
type CommandAck {
   "message accepted by the server"
   accepted: Boolean
}

type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type ClientData{
   "Client id"
   clientId: String
   "Client name"
   name: String
   "Client username"
   username: String
   "Client was updated"
   updated: Boolean
   "associated DriverId"
   referrerDriverCode: String
}

type ClientFavoritePlace {
   id: String
   type: String  
   address: String 
   name: String
   referenceName: String
   location: SatelliteLatLng
}

"Client profile info"
type ClientMongoData{
   "Client Id"
   id: String!
   "Business Id"
   businessId: String!
   "Name"
   name: String
   "Phone"
   phone: String
   "Email"
   email: String
   "Active estatus"
   active: Boolean!
   "Satellite linked to"
   satelliteId: String
   "favorite places"
   favoritePlaces: [ClientFavoritePlace]
}

type SatelliteLatLng{
   lat: Float
   lng: Float
}

"Satellite basic Info"
type ClientBasicSatelliteInfo {
   "Client ID"
   _id: String!
   "Business ID"
   businessId: String!    
   "Name"
   name: String!
   "Document ID"
   documentId: String
   "Phone"
   phone: String
   "email"
   email: String
   "city"
   city: String
   "Neighborhood"
   neighborhood: String
   "Addres Line 1"
   addressLine1: String
   "Addres Line 2"
   addressLine2: String
   "Zone"
   zone: String
   "Active State"
   active: Boolean
   "location"
   location: SatelliteLatLng
   "Tip type"
   tipType: String
   "Tip"
   tip: Int   
   "Referrer driver document id"
   referrerDriverDocumentId: String,
   "Minimum broadcasting radius"
   offerMinDistance: Int
   "Maximum broadcasting radius"
   offerMaxDistance: Int
   
}



input FavoritePlaceInput{
   id: String
   type: String
   address: String
   name: String
   referenceName: String
   lat: Float
   lng: Float
}





type Query {
   
   "Get profile data of the logged user"
   ClientProfile: ClientMongoData @requireAuth
   "Get the satellite linked to user"
   ClientLinkedSatellite(satelliteId: String!): ClientBasicSatelliteInfo @requireAuth
   "get filtered Satellites"
   ClientSatellites(filterText: String!, businessId: String): [ClientBasicSatelliteInfo] @requireAuth
   "get the favoritePlaces of user"
   ClientFavoritePlaces: [ClientFavoritePlace]
   "get the favorite place"
   ClientFavoritePlace(id: String): ClientFavoritePlace
}

type Mutation {
   AssociateDriverToClient(driverCode: String): ClientData @requireAuth
   ValidateNewClient(businessId: String): ClientData @requireAuth
   linkSatellite(satelliteId: String): CommandResponse @requireAuth
   unlinkSatellite: CommandResponse @requireAuth
   AddFavoritePlace(favoritePlace: FavoritePlaceInput): CommandResponse @requireAuth
   UpdateFavoritePlace(favoritePlace: FavoritePlaceInput): CommandResponse @requireAuth
   RemoveFavoritePlace(id: String, name: String): CommandResponse @requireAuth
}