"Async CMD server acknowledge"
type CommandAck {
   "message accepted by the server"
   accepted: Boolean
}

type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type ClientData{
   "Client id"
   clientId: String
   "Client name"
   name: String
   "Client username"
   username: String
}

"Client profile info"
type ClientMongoData{
   "Client Id"
   id: String!
   "Business Id"
   businessId: String!
   "Name"
   name: String
   "Phone"
   phone: String
   "Email"
   email: String
   "Active estatus"
   active: Boolean!
   "Satellite linked to"
   satelliteId: String
}

type SatelliteLatLng{
   lat: Float
   lng: Float
}

"Satellite basic Info"
type ClientBasicSatelliteInfo {
   "Business ID"
   businessId: String! 
   "Client ID"
   _id: String!
   "Name"
   name: String
   "Phone"
   phone: String
   "email"
   email: String
   "city"
   city: String
   "Neighborhood"
   neighborhood: String
   "Addres"
   address: String
   "Zone"
   zone: String
   "Active State"
   active: Boolean
   "location"
   location: SatelliteLatLng
   "Tip type"
   tipType: String
   "Tip"
   tip: Int   
}

type ClientSatelliteGeneralInfo {
  "Client name"
  name: String!
  "Document ID"
  documentId: String
  "Client phone"
  phone: BigInt
  "Client address 1"
  addressLine1: String
  "Client address 2"
  addressLine2: String
  "Client city"
  city: String
  "Client email"
  email: String
  "Client neighborhood"
  neighborhood: String
  "Client zone."
  zone: String
  "Location notes"
  notes: String
}

type ClientSatelliteLocation {
  lat: Float
  lng: Float
}

type ClientSatellite{
   "Client ID"
  _id: ID!
  "User general info"
  generalInfo: ClientSatelliteGeneralInfo
  "Client location"
  location: ClientSatelliteLocation
  "Client state"
  state: Boolean!
  "Business ID"
  businessId: String!
}

type Query {
   "Get profile data of the logged user"
   ClientProfile: ClientMongoData @requireAuth
   ClientLinkedSatellite(satelliteId: String!): ClientBasicSatelliteInfo @requireAuth
   ClientSatellites(filterText: String!): [ClientSatellite]
}

type Mutation {
   ValidateNewClient: ClientData @requireAuth
   linkSatellite(satelliteId: String): CommandResponse @requireAuth
}
